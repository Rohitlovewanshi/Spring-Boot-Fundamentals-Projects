<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.DelegatingPasswordEncoder"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="javax.persistence.FetchType"/>
    <fullyQualifiedTypeName name="java.util.Set"/>
    <fullyQualifiedTypeName name="javax.persistence.ManyToMany"/>
    <fullyQualifiedTypeName name="javax.persistence.JoinTable"/>
    <fullyQualifiedTypeName name="javax.persistence.JoinColumn"/>
    <fullyQualifiedTypeName name="com.rohit.springcloud.model.Role"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.User"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
    <fullyQualifiedTypeName name="com.rohit.springcloud.security.UserDetailsServiceImpl"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
    <fullyQualifiedTypeName name="com.rohit.springcloud.model.Coupon"/>
    <fullyQualifiedTypeName name="com.rohit.springcloud.repos.CouponRepo"/>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.ModelAndView"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContextHolder"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Controller"/>
    <fullyQualifiedTypeName name="com.rohit.springcloud.security.SecurityService"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="com.rohit.springcloud.model.User"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="com.rohit.springcloud.repos.UserRepo"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfigurerAdapter"/>
    <fullyQualifiedTypeName name="com.nimbusds.oauth2.sdk.as.AuthorizationServerConfigurationRequest"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.OAuth2AuthorizationServerConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurerAdapter"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.EnableAuthorizationServer"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.EnableResourceServer"/>
    <fullyQualifiedTypeName name="javax.sql.DataSource"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.token.store.JdbcTokenStore"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.token.store.KeyStoreKeyFactory"/>
    <fullyQualifiedTypeName name="org.springframework.core.io.ClassPathResource"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.token.TokenStore"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.token.store.JwtTokenStore"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="org.springframework.security.jwt.crypto.sign.RsaVerifier"/>
    <fullyQualifiedTypeName name="org.springframework.web.filter.CorsFilter"/>
    <fullyQualifiedTypeName name="org.springframework.web.cors.UrlBasedCorsConfigurationSource"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.util.matcher.RequestMatcher"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.util.matcher.RegexRequestMatcher"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.CrossOrigin"/>
    <fullyQualifiedTypeName name="org.springframework.web.cors.CorsConfigurationSource"/>
    <fullyQualifiedTypeName name="org.springframework.web.cors.CorsConfiguration"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity"/>
    <fullyQualifiedTypeName name="org.hibernate.type.TrueFalseType"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.prepost.PreAuthorize"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.prepost.PostAuthorize"/>
</qualifiedTypeNameHistroy>
